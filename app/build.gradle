apply from: "${rootProject.rootDir}/config.gradle"

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'android-aspectjx'
apply plugin: 'kotlin-kapt'

kapt {
    generateStubs = true
    arguments {
        arg("moduleName", project.getName())
    }
}

android {
    project.ext.setDefaultConfig project

    defaultConfig {
        applicationId rootProject.ext.applicationId

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        //目录指向配置
        sourceSets {
            //设置依赖so库路径
            main.jniLibs.srcDirs = ['libs']
        }

        ndk {
            // 设置支持的SO库架构(cpu)
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        //MultiDex分包方法
        multiDexEnabled true

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    /*强制指定版本*/
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '28.0.0'
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation "junit:junit:$rootProject.junit"
    androidTestImplementation "com.android.support.test:runner:$rootProject.testRunner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.testEspressoCore"
    //Arouter路由
    //    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayout"
//    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.arouterCompilerVersion"
    kapt "com.alibaba:arouter-compiler:$rootProject.arouterCompilerVersion"
    implementation project(path: ':p-core')
//    compile project(path: ':immersionbar')
    //是否模块独立运行
    if (!rootProject.ext.isRunAlone) {
        implementation project(path: ':contact')
        implementation project(path: ':message')
        implementation project(path: ':my')
        implementation project(':moduleDynamic')
    }
}
