apply from: "${rootProject.rootDir}/config.gradle"
if (Boolean.valueOf(rootProject.ext.moduleUserCenter)) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions' //启用扩展支持直接使用ID
apply plugin: 'kotlin-kapt'

kapt {
    generateStubs = true
    arguments {
        arg("moduleName", project.getName())
    }
}

android {
    project.ext.setDefaultConfig project
    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        //强制前缀
//        resourcePrefix "my_"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    /*java插件引入了一个概念叫做SourceSets，通过修改SourceSets中的属性，可以指定哪些源文件
   （或文件夹下的源文件）要被编译，哪些源文件要被排除。*/
    sourceSets {
        main {
            if (rootProject.ext.moduleUserCenter) {
                manifest.srcFile 'src/main/aloneManifest/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //排除java/debug文件夹下的所有文件
                    exclude '*module'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Arouter路由
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayout"
//    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.arouterCompilerVersion"
    kapt "com.alibaba:arouter-compiler:$rootProject.arouterCompilerVersion"
    api project(path: ':p-core')
}
